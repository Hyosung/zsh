#!/bin/bash
set -e

if [[ $(cat /etc/shells) == */bin/zsh* ]]; then
	echo "您已经安装了Oh-My-Zsh！正在准备为您更新..."
	omz update
else
	sh -c "$(curl -fsSL https://install.ohmyz.sh/)"
	if [ $? -ne 0 ]; then
		echo "安装Oh-My-Zsh失败"
		exit 1
	fi
fi

install_plugin() {
	local name=$1
	local url=$2
	if [ -d ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/$name ]; then
		echo "Zsh插件：${name}已安装！"
	else
		git clone "$url" ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/$name
		if [ $? -eq 0 ]; then
			echo "Zsh插件：${name}安装成功！"
		fi
	fi
}

# 安装 zsh-autosuggestions 命令行自动建议提示插件
install_plugin zsh-autosuggestions https://github.com/zsh-users/zsh-autosuggestions
# 安装 zsh-syntax-highlighting 命令行语法高亮插件
install_plugin zsh-syntax-highlighting https://github.com/zsh-users/zsh-syntax-highlighting.git
# 安装 you-should-use 用途是，如果执行的命令存在别名，会自动提示推荐使用的别名；
install_plugin you-should-use https://github.com/MichaelAquilina/zsh-you-should-use.git
# 安装 zsh-history-substring-search
# 一般情况下，在使用 zsh 时，通过 ↑ 或 ↓ 方向键，能实现类似按前缀匹配补齐的效果。
# 而如果输入的是中间的字符串，则没法自动补齐。这个插件真是为这个目的而生的。
install_plugin zsh-history-substring-search https://github.com/zsh-users/zsh-history-substring-search
# 安装 autojump
# 比如我现在在根目录，我想进入temp目录，通常的做法是一层一层的cd，然后有了autojump后，我们可以直接输入j temp，即可跳转到temp目录
install_plugin autojump https://github.com/wting/autojump

# 内置插件
# copyfile，用于拷贝文件内容，命令格式 copyfile <文件路径>。
# copypath 的用途如其名，就是用来 copy 路径的。
# 	支持两种用法。
# 	copypath: 无参数，直接拷贝当前路径；
# 	copypath <文件或目录>：拷贝指定文件或目录的绝对路径；
# sudo 的主要作用是，当我们输入某个命令，如 vim /etc/zshrc，发现没有系统权限，利用 sudo 插件，可快速将 sudo 作为前缀添加到命令最前面。
# 先下载模板文件
curl -o zshrc.zsh-template "https://raw.githubusercontent.com/Hyosung/zsh/refs/heads/main/zshrc.zsh-template"
if [ -f ~/.zshrc ]; then
	cp ~/.zshrc ~/.zshrc.orig
fi
mv -f zshrc.zsh-template ~/.zshrc
echo "Oh-My-Zsh配置完成!!!"
